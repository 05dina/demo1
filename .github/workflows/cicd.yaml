---
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  SONAR_SOURCES: src/main
  SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  SONAR_PROJECT_KEY: ${{ github.repository }}
  SONAR_PROJECT_NAME: ${{ github.repository }}

jobs:
  lint-and-test:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
  
      - name: Grant execute permission for Gradle
        run: chmod +x gradlew
  
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SOURCES: ${{ env.SONAR_SOURCES }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_PROJECT_KEY }}
          SONAR_PROJECT_NAME: ${{ env.SONAR_PROJECT_NAME}}
        run: ./gradlew sonar


  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set VERSION
        id: get_version
        run: echo "BUILD_VERSION=$(./gradlew getVersion|awk '/DemoVersion/{print $2}')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ github.repository }}:latest
            docker.io/${{ github.repository }}:${{ steps.get_version.outputs.BUILD_VERSION }}
          build-args: |
            BUILD_VERSION=${{ steps.get_version.outputs.BUILD_VERSION }}
